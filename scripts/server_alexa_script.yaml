server_turn_on_script:
  alias: server_turn_on_script
  sequence:
    - delay: '00:00:01'
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.server_control_on_off
    - service_template: >
        {% if is_state('input_boolean.ask_with_alexa', 'on') and is_state('input_boolean.alexa_tts_on_off', 'on')%}
          script.alexa_say_turn_on_server
        {% else %}
          script.alexa_server_on_you_cant_speak
        {% endif %}
        
server_turn_off_script:
  alias: server_turn_off_script
  sequence:
    - delay: '00:00:01'
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.server_control_on_off
    - service_template: >
        {% if is_state('input_boolean.ask_with_alexa', 'on') and is_state('input_boolean.alexa_tts_on_off', 'on')%}
          script.server_turn_off_child_script
        {% else %}
          script.alexa_server_off_you_cant_speak
        {% endif %}

server_turn_off_child_script:
  alias: server_turn_off_child_script
  sequence:
    - service_template: >
        {% if is_state('sensor.smb_status_rest', 'Libero')%}
          script.alexa_say_turn_off_server
        {% else %}
          script.alexa_say_server_busy
        {% endif %}
      
alexa_server_on_you_cant_speak:
  alias: alexa_server_on_you_cant_speak
  sequence:
    - service_template: input_boolean.turn_off
      data:
        entity_id: input_boolean.ask_with_alexa
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.alexa_check_server_state
 
alexa_server_off_you_cant_speak:
  alias: alexa_server_off_you_cant_speak
  sequence:
    - service_template: input_boolean.turn_off
      data:
        entity_id: input_boolean.ask_with_alexa
       
alexa_say_turn_on_server:
  alias: alexa_say_turn_on_server
  sequence:
    - service: media_player.volume_set
      data_template: 
        entity_id: '{{ states.sensor.last_alexa.state }}' 
        volume_level: '0.2'
    - delay: '00:00:01'
    - service: notify.alexa_media
      data_template:
        target: '{{ states.sensor.last_alexa.state }}' 
        message: >
          {% if is_state('input_boolean.alexa_check_server_state', 'on')%}
            "Il Server è già acceso, se non funziona prova a chiedermi: riavvia server"
          {% else %}
              {{ [
                  "Va bene, che la forza sia con te",
                  "Va bene, lunga vita e prosperità",
                  "Motori avanti tutta",
                  "Consideralo già fatto",
                  "Ogni tuo desiderio è un ordine",
                  "Lo faccio subito, ma non hai detto per favore",
                  "Senza di me non sapresti più che fare. E io senza di te non mi divertirei più. Ecco perché non ci uccideremo mai.",
                  "Roger comandante",
                  "Capo pattuglia chiama Corvo, eseguo",
                  "In città sei tu la legge, qua sono io",
                  "O muori da eroe o vivi tanto a lungo da diventare il cattivo",
                  "Non è tanto chi sono, quanto quello che faccio, che mi qualifica",
                  "Energia",
                  "abracadabra",
                  "Io ti spiezzo in due",
                  "Rambo, cosa gli rispondiamo? Fanculo",
                  "La capacità di parlare non fa di te un essere intelligente"
                ] | random }}
          {% endif %}
        data:
          type: "tts"
    - service_template: input_boolean.turn_off
      data:
        entity_id: input_boolean.ask_with_alexa
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.alexa_check_server_state

alexa_say_turn_off_server:
  alias: alexa_say_turn_off_server
  sequence:
    - service: media_player.volume_set
      data_template: 
        entity_id: '{{ states.sensor.last_alexa.state }}' 
        volume_level: '0.2'
    - delay: '00:00:01'
    - service: notify.alexa_media
      data_template:
        target: '{{ states.sensor.last_alexa.state }}' 
        message: >
          {% if is_state('input_boolean.alexa_check_server_state', 'off')%}
            "Tranquillo il Server è già spento"
          {% else %}
              {{ [
                  "Va bene, che la forza sia con te",
                  "Va bene, lunga vita e prosperità",
                  "Va bene, spero che il film ti sia piaciuto",
                  "Consideralo già fatto",
                  "Ogni tuo desiderio è un ordine",
                  "Lo faccio subito, ma non ho sentito per favore",
                  "Lascia fare a me",
                  "Roger comandante",
                  "Capo pattuglia chiama Corvo, eseguo",
                  "In città sei tu la legge, qua sono io...fatto",
                  "Affermativo, scateno l'inferno",
                  "Non è tanto chi sono, quanto quello che faccio che mi qualifica",
                  "Energia",
                  "No problem",
                  "Io ti spiezzo in due",
                  "Rambo, cosa gli rispondiamo? Fanculo"
                ] | random }}
          {% endif %}
        data:
          type: "tts"
    - service_template: input_boolean.turn_off
      data:
        entity_id: input_boolean.ask_with_alexa
        
alexa_say_server_busy:
  alias: alexa_say_server_busy
  sequence:
    - service: media_player.volume_set
      data_template: 
        entity_id: '{{ states.sensor.last_alexa.state }}' 
        volume_level: '0.2'
    - delay: '00:00:01'
    - service: notify.alexa_media
      data_template:
        target: '{{ states.sensor.last_alexa.state }}' 
        message: >
          "Impossibile spegnere il Server, al momento è occuppato. 
           Puoi forzare lo spegnimento chiedendomi: forza spegnimento server"
        data:
          type: "tts"
    - service_template: input_boolean.turn_off
      data:
        entity_id: input_boolean.ask_with_alexa

alexa_reboot_server_script:
  alias: Alexa avvisa server riavviato
  sequence:
    - service: media_player.volume_set
      data_template: 
        entity_id: '{{ states.sensor.last_alexa.state }}' 
        volume_level: '0.2'
    - delay: '00:00:01'
    - service: notify.alexa_media
      data_template:
        target: '{{ states.sensor.last_alexa.state }}' 
        message: >
          {% if is_state('switch.outlet_b44d', 'on')%}
          "Va bene, riavvio il server....aspetta qualche minuto"
          {% else %}
          "Il Server è spento, non posso riavviarlo"
          {% endif %}
        data:
          type: "tts"